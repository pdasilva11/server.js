name: Vault Secret to Mounted File in Deployment

on:
  workflow_dispatch:

jobs:
  retrieve-and-deploy:
    runs-on: self-hosted

    env:
      API_URL: ${{ vars.API_URL }}
      VERIFY_CA: ${{ vars.VERIFY_CA }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      CERTIFICATE: ${{ secrets.CERTIFICATE }}
      CERTIFICATE_KEY: ${{ secrets.CERTIFICATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Retrieve DEPLOY_KEY from BeyondTrust
        id: secretsafe
        uses: BeyondTrust/secrets-safe-action@v1
        with:
          SECRET_PATH: '{"path": "nav/docker", "output_id": "docker"}'

      - name: Write DEPLOY_KEY secret to file
        run: |
          secret="${{ steps.secretsafe.outputs.docker }}"
          if [ -z "$secret" ]; then
            echo "❌ Error: Secret is empty!"
            exit 1
          fi
          echo "$secret" > /opt/tmp/secret.txt
          echo "✅ Secret written to /opt/tmp/secret.txt"

      - name: Check current user and validate kubeconfig
        run: |
          whoami
          ls -l $HOME/.kube/config

      - name: Set KUBECONFIG and Verify Kubernetes Config
        run: |
          export KUBECONFIG=$HOME/.kube/config
          kubectl config view

      - name: Verify Kubernetes Secret Before Creating
        run: |
          export KUBECONFIG=$HOME/.kube/config
          if kubectl get secret vault-secret > /dev/null 2>&1; then
            echo "Kubernetes secret exists, deleting..."
            kubectl delete secret vault-secret
          fi
          kubectl create secret generic vault-secret --from-file=secret.txt=/opt/tmp/secret.txt

      - name: Create Deployment YAML with BeyondTrust container and mounted secret
        run: |
          cat <<EOF > /opt/tmp/vault-test-deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: jumpoint-docker-deploy
            namespace: default
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: jumpoint
            template:
              metadata:
                labels:
                  app: jumpoint
              spec:
                containers:
                - name: jumpoint-name
                  image: beyondtrust/sra-jumpoint:1cd9128ba1
                  env:
                  - name: DEPLOY_KEY
                    valueFrom:
                      secretKeyRef:
                        name: vault-secret
                        key: secret.txt
                  volumeMounts:
                  - name: jpt-vol
                    mountPath: /jpt
                  securityContext:
                    capabilities:
                      add: ["IPC_LOCK"]
                volumes:
                - name: jpt-vol
                  hostPath:
                    path: /data
                    type: Directory
          EOF

      - name: Confirm YAML file exists
        run: |
          cat /opt/tmp/vault-test-deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          export KUBECONFIG=$HOME/.kube/config
          kubectl apply -f /opt/tmp/vault-test-deployment.yaml
