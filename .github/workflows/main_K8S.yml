name: Vault Secret to Mounted File in Pod

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Retrieve secret using BeyondTrust Secrets Safe Action
        id: secretsafe
        uses: BeyondTrust/secrets-safe-action@v1
        env:
          API_URL: ${{ vars.API_URL }}
          VERIFY_CA: ${{ vars.VERIFY_CA }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          CERTIFICATE: ${{ secrets.CERTIFICATE }}
          CERTIFICATE_KEY: ${{ secrets.CERTIFICATE_KEY }}
        with:
          SECRET_PATH: '{"path": "nav/test", "output_id": "test"}'

      - name: Extract secret value and create Kubernetes secret
        run: |
          secret_response="${{ steps.secretsafe.outputs.secret }}"
          secret=$(echo "$secret_response" | jq -r '.value')
          echo "$secret" > /tmp/secret.txt
          kubectl delete secret vault-secret --ignore-not-found
          kubectl create secret generic vault-secret --from-file=secret.txt=/tmp/secret.txt

      - name: Create Pod YAML with BeyondTrust container and mounted secret
        run: |
          cat <<EOF | sudo tee /opt/tmp/vault-test-pod.yaml > /dev/null
apiVersion: v1
kind: Pod
metadata:
  name: jumpoint-pod
  namespace: default
spec:
  containers:
  - name: jumpoint-name
    image: beyondtrust/sra-jumpoint:1cd9128ba1
    env:
    - name: DEPLOY_KEY
      valueFrom:
        secretKeyRef:
          name: vault-secret
          key: secret.txt
    volumeMounts:
    - name: jpt-vol
      mountPath: /jpt
    securityContext:
      capabilities:
        add: ["IPC_LOCK"]
  volumes:
  - name: jpt-vol
    hostPath:
      path: /data  # Replace with your actual local path
      type: Directory
EOF

      - name: Confirm YAML file exists
        run: |
          ls -l /opt/tmp/vault-test-pod.yaml
          cat /opt/tmp/vault-test-pod.yaml

      - name: Deploy Pod using kubectl
        run: |
          kubectl apply -f /opt/tmp/vault-test-pod.yaml
